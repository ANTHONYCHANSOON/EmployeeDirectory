{"ast":null,"code":"import _slicedToArray from \"c:\\\\Users\\\\antho\\\\Documents\\\\UCLA\\\\HOMEWORK\\\\EmployeeDirectory\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"c:\\\\Users\\\\antho\\\\Documents\\\\UCLA\\\\HOMEWORK\\\\EmployeeDirectory\\\\src\\\\components\\\\DataArea.js\";\nimport React, { Component, useEffect, useState } from \"react\";\nimport DataTable from \"./DataTable\";\nimport Nav from \"./Nav\";\nimport API from \"../utils/API\";\nimport \"../styles/DataArea.css\";\nimport EmpContext from \"../utils/EmpContext\";\n\nfunction DataArea() {\n  const _useState = useState({\n    users: \"\",\n    order: \"decend\",\n    filteredUsers: [{}],\n    headings: [{\n      name: \"Image\",\n      width: \"10%\"\n    }, {\n      name: \"Name\",\n      width: \"10%\"\n    }, {\n      name: \"Phone\",\n      width: \"20%\"\n    }, {\n      name: \"Email\",\n      width: \"20%\"\n    }, {\n      name: \"DOB\",\n      width: \"10%\"\n    }]\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        developerState = _useState2[0],\n        setDeveloperState = _useState2[1];\n\n  useEffect(() => {\n    API.getUsers().then(results => {\n      setDeveloperState(...developerState, users);\n      this.setState({\n        users: results.data.results,\n        filteredUsers: results.data.results\n      });\n    });\n  }, []);\n\n  function handleSort(heading) {\n    if (this.state.order === \"descend\") {\n      this.setState({\n        order: \"ascend\"\n      });\n    } else {\n      this.setState({\n        order: \"descend\"\n      });\n    }\n\n    const compareFnc = (a, b) => {\n      if (this.state.order === \"ascend\") {\n        // account for missing values\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        } // numerically\n        else if (heading === \"name\") {\n            return a[heading].first.localeCompare(b[heading].first);\n          } else {\n            return a[heading] - b[heading];\n          }\n      } else {\n        // account for missing values\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        } // numerically\n        else if (heading === \"name\") {\n            return b[heading].first.localeCompare(a[heading].first);\n          } else {\n            return b[heading] - a[heading];\n          }\n      }\n    };\n\n    const sortedUsers = this.state.filteredUsers.sort(compareFnc);\n    this.setState({\n      filteredUsers: sortedUsers\n    });\n\n    function handleSearchChange(event) {\n      console.log(event.target.value);\n      const filter = event.target.value;\n      const filteredList = this.state.users.filter(item => {\n        // merge data together, then see if user input is anywhere inside\n        let values = Object.values(item).join(\"\").toLowerCase();\n        return values.indexOf(filter.toLowerCase()) !== -1;\n      });\n      this.setState({\n        filteredUsers: filteredList\n      });\n    }\n  }\n\n  ;\n  return React.createElement(React.Fragment, null, React.createElement(EmpContext.Provider, {\n    value: {\n      developerState,\n      handleSort,\n      handleSearchChange\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    handleSearchChange: this.state.handleSearchChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"data-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(DataTable, {\n    headings: this.state.headings,\n    users: this.state.filteredUsers,\n    handleSort: this.state.handleSort,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }))));\n}\n\nexport default DataArea; // export default class DataArea extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       users: [{}],\n//       order: \"descend\",\n//       filteredUsers: [{}],\n//       headings: [\n//         { name: \"Image\", width: \"10%\" },\n//         { name: \"Name\", width: \"10%\" },\n//         { name: \"Phone\", width: \"20%\" },\n//         { name: \"Email\", width: \"20%\" },\n//         { name: \"DOB\", width: \"10%\" }\n//       ],\n//       handleSort: heading => {\n//         if (this.state.order === \"descend\") {\n//           this.setState({\n//             order: \"ascend\"\n//           })\n//         } else {\n//           this.setState({\n//             order: \"descend\"\n//           })\n//         }\n//         const compareFnc = (a, b) => {\n//           if (this.state.order === \"ascend\") {\n//             // account for missing values\n//             if (a[heading] === undefined) {\n//               return 1;\n//             } else if (b[heading] === undefined) {\n//               return -1;\n//             }\n//             // numerically\n//             else if (heading === \"name\") {\n//               return a[heading].first.localeCompare(b[heading].first);\n//             } else {\n//               return a[heading] - b[heading];\n//             }\n//           } else {\n//             // account for missing values\n//             if (a[heading] === undefined) {\n//               return 1;\n//             } else if (b[heading] === undefined) {\n//               return -1;\n//             }\n//             // numerically\n//             else if (heading === \"name\") {\n//               return b[heading].first.localeCompare(a[heading].first);\n//             } else {\n//               return b[heading] - a[heading];\n//             }\n//           }\n//         }\n//         const sortedUsers = this.state.filteredUsers.sort(compareFnc);\n//         this.setState({ filteredUsers: sortedUsers });\n//       },\n//       handleSearchChange: event => {\n//         console.log(event.target.value);\n//         const filter = event.target.value;\n//         const filteredList = this.state.users.filter(item => {\n//           // merge data together, then see if user input is anywhere inside\n//           let values = Object.values(item)\n//             .join(\"\")\n//             .toLowerCase();\n//           return values.indexOf(filter.toLowerCase()) !== -1;\n//         });\n//         this.setState({ filteredUsers: filteredList });\n//       }\n//     };\n//   }\n//   componentDidMount() {\n//     API.getUsers().then(results => {\n//       this.setState({\n//         users: results.data.results,\n//         filteredUsers: results.data.results\n//       });\n//     });\n//   }\n//   render() {\n//     return (\n//       <>\n//         <Nav handleSearchChange={this.state.handleSearchChange} />\n//         <div className=\"data-area\">\n//           <DataTable\n//             headings={this.state.headings}\n//             users={this.state.filteredUsers}\n//             handleSort={this.state.handleSort}\n//           />\n//         </div>\n//       </>\n//     );\n//   }\n// }","map":{"version":3,"sources":["c:/Users/antho/Documents/UCLA/HOMEWORK/EmployeeDirectory/src/components/DataArea.js"],"names":["React","Component","useEffect","useState","DataTable","Nav","API","EmpContext","DataArea","users","order","filteredUsers","headings","name","width","developerState","setDeveloperState","getUsers","then","results","setState","data","handleSort","heading","state","compareFnc","a","b","undefined","first","localeCompare","sortedUsers","sort","handleSearchChange","event","console","log","target","value","filter","filteredList","item","values","Object","join","toLowerCase","indexOf"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport DataTable from \"./DataTable\";\nimport Nav from \"./Nav\";\nimport API from \"../utils/API\";\nimport \"../styles/DataArea.css\";\nimport EmpContext from \"../utils/EmpContext\";\n\nfunction DataArea() {\n  const [developerState, setDeveloperState] = useState({\n    users: \"\",\n    order: \"decend\",\n    filteredUsers: [{}],\n    headings: [\n      { name: \"Image\", width: \"10%\" },\n      { name: \"Name\", width: \"10%\" },\n      { name: \"Phone\", width: \"20%\" },\n      { name: \"Email\", width: \"20%\" },\n      { name: \"DOB\", width: \"10%\" }\n    ]\n  });\n\n  useEffect(() => {\n    API.getUsers().then(results => {\n\n      setDeveloperState(...developerState,users)\n\n      this.setState({\n        users: results.data.results,\n        filteredUsers: results.data.results\n      });\n    });\n  }, []);\n\n  function handleSort(heading) {\n\n    if (this.state.order === \"descend\") {\n      this.setState({\n        order: \"ascend\"\n      })\n    } else {\n      this.setState({\n        order: \"descend\"\n      })\n    }\n\n    const compareFnc = (a, b) => {\n      if (this.state.order === \"ascend\") {\n        // account for missing values\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        }\n        // numerically\n        else if (heading === \"name\") {\n          return a[heading].first.localeCompare(b[heading].first);\n        } else {\n          return a[heading] - b[heading];\n        }\n      } else {\n        // account for missing values\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        }\n        // numerically\n        else if (heading === \"name\") {\n          return b[heading].first.localeCompare(a[heading].first);\n        } else {\n          return b[heading] - a[heading];\n        }\n      }\n\n    }\n    const sortedUsers = this.state.filteredUsers.sort(compareFnc);\n    this.setState({ filteredUsers: sortedUsers });\n\n    function handleSearchChange(event) {\n      console.log(event.target.value);\n      const filter = event.target.value;\n      const filteredList = this.state.users.filter(item => {\n        // merge data together, then see if user input is anywhere inside\n        let values = Object.values(item)\n          .join(\"\")\n          .toLowerCase();\n        return values.indexOf(filter.toLowerCase()) !== -1;\n      });\n      this.setState({ filteredUsers: filteredList });\n    }\n  };\n  return (\n    <>\n      <EmpContext.Provider value={{developerState, handleSort, handleSearchChange}} >\n        <Nav handleSearchChange={this.state.handleSearchChange} />\n        <div className=\"data-area\">\n          <DataTable\n            headings={this.state.headings}\n            users={this.state.filteredUsers}\n            handleSort={this.state.handleSort}\n          />\n        </div>\n      </EmpContext.Provider>\n    </>\n  );\n\n}\n\nexport default DataArea;\n\n\n// export default class DataArea extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       users: [{}],\n//       order: \"descend\",\n//       filteredUsers: [{}],\n//       headings: [\n//         { name: \"Image\", width: \"10%\" },\n//         { name: \"Name\", width: \"10%\" },\n//         { name: \"Phone\", width: \"20%\" },\n//         { name: \"Email\", width: \"20%\" },\n//         { name: \"DOB\", width: \"10%\" }\n//       ],\n\n//       handleSort: heading => {\n\n//         if (this.state.order === \"descend\") {\n//           this.setState({\n//             order: \"ascend\"\n//           })\n//         } else {\n//           this.setState({\n//             order: \"descend\"\n//           })\n//         }\n\n//         const compareFnc = (a, b) => {\n//           if (this.state.order === \"ascend\") {\n//             // account for missing values\n//             if (a[heading] === undefined) {\n//               return 1;\n//             } else if (b[heading] === undefined) {\n//               return -1;\n//             }\n//             // numerically\n//             else if (heading === \"name\") {\n//               return a[heading].first.localeCompare(b[heading].first);\n//             } else {\n//               return a[heading] - b[heading];\n//             }\n//           } else {\n//             // account for missing values\n//             if (a[heading] === undefined) {\n//               return 1;\n//             } else if (b[heading] === undefined) {\n//               return -1;\n//             }\n//             // numerically\n//             else if (heading === \"name\") {\n//               return b[heading].first.localeCompare(a[heading].first);\n//             } else {\n//               return b[heading] - a[heading];\n//             }\n//           }\n\n//         }\n//         const sortedUsers = this.state.filteredUsers.sort(compareFnc);\n//         this.setState({ filteredUsers: sortedUsers });\n//       },\n//       handleSearchChange: event => {\n//         console.log(event.target.value);\n//         const filter = event.target.value;\n//         const filteredList = this.state.users.filter(item => {\n//           // merge data together, then see if user input is anywhere inside\n//           let values = Object.values(item)\n//             .join(\"\")\n//             .toLowerCase();\n//           return values.indexOf(filter.toLowerCase()) !== -1;\n//         });\n//         this.setState({ filteredUsers: filteredList });\n//       }\n//     };\n//   }\n\n//   componentDidMount() {\n//     API.getUsers().then(results => {\n//       this.setState({\n//         users: results.data.results,\n//         filteredUsers: results.data.results\n//       });\n//     });\n//   }\n\n//   render() {\n//     return (\n//       <>\n//         <Nav handleSearchChange={this.state.handleSearchChange} />\n//         <div className=\"data-area\">\n//           <DataTable\n//             headings={this.state.headings}\n//             users={this.state.filteredUsers}\n//             handleSort={this.state.handleSort}\n//           />\n//         </div>\n//       </>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}