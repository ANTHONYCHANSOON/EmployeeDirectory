{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\antho\\\\Documents\\\\UCLA\\\\HOMEWORK\\\\EmployeeDirectory\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\antho\\\\Documents\\\\UCLA\\\\HOMEWORK\\\\EmployeeDirectory\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\antho\\\\Documents\\\\UCLA\\\\HOMEWORK\\\\EmployeeDirectory\\\\src\\\\components\\\\DataArea.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport DataTable from \"./DataTable\";\nimport Nav from \"./Nav\";\nimport API from \"../utils/API\";\nimport \"../styles/DataArea.css\";\nimport EmpContext from \"../utils/EmpContext\"; //import { deepStrictEqual } from \"assert\";\n\nfunction DataArea() {\n  const _useState = useState({\n    users: [{}],\n    order: \"descend\",\n    filteredUsers: [{}],\n    headings: [{\n      name: \"Image\",\n      width: \"10%\"\n    }, {\n      name: \"Name\",\n      width: \"10%\"\n    }, {\n      name: \"Phone\",\n      width: \"20%\"\n    }, {\n      name: \"Email\",\n      width: \"20%\"\n    }, {\n      name: \"DOB\",\n      width: \"10%\"\n    }]\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        developerState = _useState2[0],\n        setDeveloperState = _useState2[1];\n\n  function handleSort(heading) {\n    if (developerState.order === \"descend\") {\n      setDeveloperState(_objectSpread({}, developerState, {\n        order: \"ascend\"\n      }));\n      alert(\"d - > a\");\n    } else {\n      setDeveloperState(_objectSpread({}, developerState, {\n        order: \"descend\"\n      }));\n      alert(\"d - > d\");\n    }\n\n    const compareFnc = (a, b) => {\n      if (developerState.order === \"ascend\") {\n        // account for missing values\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        } // numerically\n        else if (heading === \"name\") {\n            return a[heading].first.localeCompare(b[heading].first);\n          } else {\n            return a[heading] - b[heading];\n          }\n      } else {\n        // account for missing values\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        } // numerically\n        else if (heading === \"name\") {\n            return b[heading].first.localeCompare(a[heading].first);\n          } else {\n            return b[heading] - a[heading];\n          }\n      }\n    };\n\n    const sortedUsers = developerState.filteredUsers.sort(compareFnc);\n    setDeveloperState(_objectSpread({}, developerState, {\n      filteredUsers: sortedUsers\n    }));\n  }\n\n  function handleSearchChange(event) {\n    //console.log(\"HANDLESEARCHCHANGE ARGUMENT\", event.target.value);\n    const filter = event.target.value;\n    const filteredList = developerState.users.filter(item => {\n      // merge data together, then see if user input is anywhere inside\n      //console.log(\"item\", item);\n      let values = Object.values(item).join(\"\").toLowerCase();\n      return values.indexOf(filter.toLowerCase()) !== -1;\n    });\n    console.log(\"FILTER\", filteredList);\n    setDeveloperState(_objectSpread({}, developerState, {\n      filteredUsers: filteredList\n    }));\n  }\n\n  useEffect(() => {\n    API.getUsers().then(results => {\n      setDeveloperState(_objectSpread({}, developerState, {\n        users: results.data.results,\n        filteredUsers: results.data.results\n      }));\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(EmpContext.Provider, {\n    value: {\n      developerState,\n      handleSort,\n      handleSearchChange\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"data-area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(DataTable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }))));\n}\n\nexport default DataArea; // export default class DataArea extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       users: [{}],\n//       order: \"descend\",\n//       filteredUsers: [{}],\n//       headings: [\n//         { name: \"Image\", width: \"10%\" },\n//         { name: \"Name\", width: \"10%\" },\n//         { name: \"Phone\", width: \"20%\" },\n//         { name: \"Email\", width: \"20%\" },\n//         { name: \"DOB\", width: \"10%\" }\n//       ],\n//     handleSort: heading => {\n//       if (this.state.order === \"descend\") {\n//         this.setState({\n//           order: \"ascend\"\n//         })\n//       } else {\n//         this.setState({\n//           order: \"descend\"\n//         })\n//       }\n//       const compareFnc = (a, b) => {\n//         if (this.state.order === \"ascend\") {\n//           // account for missing values\n//           if (a[heading] === undefined) {\n//             return 1;\n//           } else if (b[heading] === undefined) {\n//             return -1;\n//           }\n//           // numerically\n//           else if (heading === \"name\") {\n//             return a[heading].first.localeCompare(b[heading].first);\n//           } else {\n//             return a[heading] - b[heading];\n//           }\n//         } else {\n//           // account for missing values\n//           if (a[heading] === undefined) {\n//             return 1;\n//           } else if (b[heading] === undefined) {\n//             return -1;\n//           }\n//           // numerically\n//           else if (heading === \"name\") {\n//             return b[heading].first.localeCompare(a[heading].first);\n//           } else {\n//             return b[heading] - a[heading];\n//           }\n//         }\n//       }\n//       const sortedUsers = this.state.filteredUsers.sort(compareFnc);\n//       this.setState({ filteredUsers: sortedUsers });\n//     },\n//     handleSearchChange: event => {\n//       console.log(event.target.value);\n//       const filter = event.target.value;\n//       const filteredList = this.state.users.filter(item => {\n//         // merge data together, then see if user input is anywhere inside\n//         let values = Object.values(item)\n//           .join(\"\")\n//           .toLowerCase();\n//         return values.indexOf(filter.toLowerCase()) !== -1;\n//       });\n//       this.setState({ filteredUsers: filteredList });\n//     }\n//   };\n// }\n//   componentDidMount() {\n//     API.getUsers().then(results => {\n//       this.setState({\n//         users: results.data.results,\n//         filteredUsers: results.data.results\n//       });\n//     });\n//   }\n//   render() {\n//     return (\n//       <>\n//         <Nav handleSearchChange={this.state.handleSearchChange} />\n//         <div className=\"data-area\">\n//           <DataTable\n//             headings={this.state.headings}\n//             users={this.state.filteredUsers}\n//             handleSort={this.state.handleSort}\n//           />\n//         </div>\n//       </>\n//     );\n//   }\n// }","map":{"version":3,"sources":["C:/Users/antho/Documents/UCLA/HOMEWORK/EmployeeDirectory/src/components/DataArea.js"],"names":["React","useEffect","useState","DataTable","Nav","API","EmpContext","DataArea","users","order","filteredUsers","headings","name","width","developerState","setDeveloperState","handleSort","heading","alert","compareFnc","a","b","undefined","first","localeCompare","sortedUsers","sort","handleSearchChange","event","filter","target","value","filteredList","item","values","Object","join","toLowerCase","indexOf","console","log","getUsers","then","results","data"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DataTable from \"./DataTable\";\nimport Nav from \"./Nav\";\nimport API from \"../utils/API\";\nimport \"../styles/DataArea.css\";\nimport EmpContext from \"../utils/EmpContext\";\n//import { deepStrictEqual } from \"assert\";\n\nfunction DataArea() {\n\n  const [developerState, setDeveloperState] = useState({\n    users: [{}],\n    order: \"descend\",\n    filteredUsers: [{}],\n    headings: [\n      { name: \"Image\", width: \"10%\" },\n      { name: \"Name\", width: \"10%\" },\n      { name: \"Phone\", width: \"20%\" },\n      { name: \"Email\", width: \"20%\" },\n      { name: \"DOB\", width: \"10%\" }\n    ]\n  });\n\n  function handleSort(heading) {\n\n    if (developerState.order === \"descend\") {\n      setDeveloperState({ ...developerState, order: \"ascend\" })\n      alert(\"d - > a\");\n    } else {\n      setDeveloperState({ ...developerState, order: \"descend\" })\n      alert(\"d - > d\");\n    }\n\n    const compareFnc = (a, b) => {\n      if (developerState.order === \"ascend\") {\n        // account for missing values\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        }\n        // numerically\n        else if (heading === \"name\") {\n          return a[heading].first.localeCompare(b[heading].first);\n        } else {\n          return a[heading] - b[heading];\n        }\n      } else {\n        // account for missing values\n        if (a[heading] === undefined) {\n          return 1;\n        } else if (b[heading] === undefined) {\n          return -1;\n        }\n        // numerically\n        else if (heading === \"name\") {\n          return b[heading].first.localeCompare(a[heading].first);\n        } else {\n          return b[heading] - a[heading];\n        }\n      }\n\n    }\n    const sortedUsers = developerState.filteredUsers.sort(compareFnc);\n    setDeveloperState({ ...developerState, filteredUsers: sortedUsers });\n  }\n\n  function handleSearchChange (event) {\n    //console.log(\"HANDLESEARCHCHANGE ARGUMENT\", event.target.value);\n    const filter = event.target.value;\n    const filteredList = developerState.users.filter(item => {\n      // merge data together, then see if user input is anywhere inside\n      //console.log(\"item\", item);\n\n      let values = Object.values(item)\n        .join(\"\")\n        .toLowerCase();\n\n      return values.indexOf(filter.toLowerCase()) !== -1;\n    });\n    console.log(\"FILTER\", filteredList);\n    setDeveloperState({ ...developerState, filteredUsers: filteredList });\n  }\n\nuseEffect(() => {\n  API.getUsers().then(results => {\n    setDeveloperState({ ...developerState, users: results.data.results, filteredUsers: results.data.results })\n  });\n}, []);\n\nreturn (\n  <>\n    <EmpContext.Provider value={{ developerState, handleSort, handleSearchChange }} >\n      <Nav />\n      <div className=\"data-area\">\n        <DataTable\n\n        />\n      </div>\n    </EmpContext.Provider>\n  </>\n);\n\n}\n\nexport default DataArea;\n\n\n// export default class DataArea extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       users: [{}],\n//       order: \"descend\",\n//       filteredUsers: [{}],\n//       headings: [\n//         { name: \"Image\", width: \"10%\" },\n//         { name: \"Name\", width: \"10%\" },\n//         { name: \"Phone\", width: \"20%\" },\n//         { name: \"Email\", width: \"20%\" },\n//         { name: \"DOB\", width: \"10%\" }\n//       ],\n\n  //     handleSort: heading => {\n\n  //       if (this.state.order === \"descend\") {\n  //         this.setState({\n  //           order: \"ascend\"\n  //         })\n  //       } else {\n  //         this.setState({\n  //           order: \"descend\"\n  //         })\n  //       }\n\n  //       const compareFnc = (a, b) => {\n  //         if (this.state.order === \"ascend\") {\n  //           // account for missing values\n  //           if (a[heading] === undefined) {\n  //             return 1;\n  //           } else if (b[heading] === undefined) {\n  //             return -1;\n  //           }\n  //           // numerically\n  //           else if (heading === \"name\") {\n  //             return a[heading].first.localeCompare(b[heading].first);\n  //           } else {\n  //             return a[heading] - b[heading];\n  //           }\n  //         } else {\n  //           // account for missing values\n  //           if (a[heading] === undefined) {\n  //             return 1;\n  //           } else if (b[heading] === undefined) {\n  //             return -1;\n  //           }\n  //           // numerically\n  //           else if (heading === \"name\") {\n  //             return b[heading].first.localeCompare(a[heading].first);\n  //           } else {\n  //             return b[heading] - a[heading];\n  //           }\n  //         }\n\n  //       }\n  //       const sortedUsers = this.state.filteredUsers.sort(compareFnc);\n  //       this.setState({ filteredUsers: sortedUsers });\n  //     },\n  //     handleSearchChange: event => {\n  //       console.log(event.target.value);\n  //       const filter = event.target.value;\n  //       const filteredList = this.state.users.filter(item => {\n  //         // merge data together, then see if user input is anywhere inside\n  //         let values = Object.values(item)\n  //           .join(\"\")\n  //           .toLowerCase();\n  //         return values.indexOf(filter.toLowerCase()) !== -1;\n  //       });\n  //       this.setState({ filteredUsers: filteredList });\n  //     }\n  //   };\n  // }\n\n//   componentDidMount() {\n//     API.getUsers().then(results => {\n//       this.setState({\n//         users: results.data.results,\n//         filteredUsers: results.data.results\n//       });\n//     });\n//   }\n\n//   render() {\n//     return (\n//       <>\n//         <Nav handleSearchChange={this.state.handleSearchChange} />\n//         <div className=\"data-area\">\n//           <DataTable\n//             headings={this.state.headings}\n//             users={this.state.filteredUsers}\n//             handleSort={this.state.handleSort}\n//           />\n//         </div>\n//       </>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}